[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In constructor â€˜[01m[KWallFollow::WallFollow()[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:17:117:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KSafety[m[Kâ€™ has not been declared
   17 | >create_subscription<sensor_msgs::msg::LaserScan>(lidarscan_topic, 10, std::bind(&[01;31m[KSafety[m[K::scan_callback, this, _1));
      |                                                                                   [01;31m[K^~~~~~[m[K

[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_range(float*, double, double, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:69:54:[m[K [01;35m[Kwarning: [m[Kdivision â€˜[01m[Ksizeof (float*) / sizeof (float)[m[Kâ€™ does not compute the number of array elements [[01;35m[K-Wsizeof-pointer-div[m[K]
   69 |         if (index >= 0 && index < [01;35m[Ksizeof(range_data) / sizeof(range_data[0])[m[K)
      |                                   [01;35m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:48:29:[m[K [01;36m[Knote: [m[Kfirst â€˜[01m[Ksizeof[m[Kâ€™ operand was declared here
   48 |     double get_range([01;36m[Kfloat* range_data[m[K, double angle, double angle_min, double angle_increment)
      |                      [01;36m[K~~~~~~~^~~~~~~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:69:33:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
   69 |         if (index >= 0 && [01;35m[Kindex < sizeof(range_data) / sizeof(range_data[0])[m[K)
      |                           [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:98:75:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KWallFollow::get_range(float*&, double, double&)[m[Kâ€™
   98 |         double a = get_range(range_data, angle_min+M_PI/2, angle_increment[01;31m[K)[m[K;
      |                                                                           [01;31m[K^[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:48:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kdouble WallFollow::get_range(float*, double, double, double)[m[Kâ€™
   48 |     double [01;36m[Kget_range[m[K(float* range_data, double angle, double angle_min, double angle_increment)
      |            [01;36m[K^~~~~~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:48:12:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 3 provided
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:99:81:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KWallFollow::get_range(float*&, double, double&)[m[Kâ€™
   99 |         double b = get_range(range_data, angle_min+M_PI/2-theta, angle_increment[01;31m[K)[m[K;
      |                                                                                 [01;31m[K^[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:48:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kdouble WallFollow::get_range(float*, double, double, double)[m[Kâ€™
   48 |     double [01;36m[Kget_range[m[K(float* range_data, double angle, double angle_min, double angle_increment)
      |            [01;36m[K^~~~~~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:48:12:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 3 provided
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kvoid WallFollow::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::ConstSharedPtr)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:168:51:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kfloat*[m[Kâ€™
  168 |         double error = get_error([01;31m[Kscan_msg->ranges.data[m[K, scan_msg->angle_min, scan_msg->angle_increment);
      |                                  [01;31m[K~~~~~~~~~~~~~~~~~^~~~[m[K
      |                                                   [01;31m[K|[m[K
      |                                                   [01;31m[K<unresolved overloaded function type>[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:84:29:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™
   84 |     double get_error([01;36m[Kfloat* range_data[m[K, double angle_min, double angle_increment)
      |                      [01;36m[K~~~~~~~^~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/wall_follow_node.dir/build.make:63: CMakeFiles/wall_follow_node.dir/src/wall_follow_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/wall_follow_node.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
